# input from the console 
input {
  stdin { }
}

# parsing and filtering
filter {
  # "grok" and "match" plugins to parse attributes (alert number, version, timestamp, domain, source, and pid) that are seperated by a space and group the remaining attributes that are Key=Value pairs into "body".
  grok {
    match => { "message" => "\<%{NUMBER}\>%{NUMBER} %{TIMESTAMP_ISO8601:timestamp} %{WORD:host} %{WORD:source} %{NUMBER:pid} --%{GREEDYDATA:body}" }
  }
  # "kv" plugin to parse the key value pairs (alerntame, computername, computerip, and severity) in the "body".
  kv {
    field_split => " "
    # use RegEx to include any Values that are composed of two words with a space.
    value_split => "(?<!\\\")=(?!(\\w+\\s+)?\\\")"
    source => "body"
  }
  # rename keys to standardized output
  mutate {
    rename  => {
      "alertname" => "description"
      "computername" => "hostname"
      "computerip" => "source_ip"
      # the Key "severity" was not mapping properly (not exactly sure why) so had to change to "everity". 
      "everity" => "severity"
    }
    # substitute severity numberic value to corresponding text. Can also add additional mapping for Syslog severity levels. 
    gsub => [
      "severity", "1", "High"
    ]
    # remove unnessary fieldx
    remove_field => ["alertname", "computername", "computerip", "timestamp", "host"]
  }
}
# output parsed result to the console 
output {
  stdout { codec => rubydebug }
}
